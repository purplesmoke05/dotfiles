[
    { "key": "ctrl+=", "command": "workbench.action.terminal.focus"},
    {
        "key": "ctrl+]",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+x p",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+x i",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.explorer.fileView.focus"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "-workbench.action.newWindow",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "extension.changeCase.snake"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+9",
        "command": "deleteWordPartRight"
    },
    {
        "key": "ctrl+0",
        "command": "deleteWordPartLeft"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "down",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "up",
        "command": "-showPrevParameterHint",
        "when": "parameterHintsMultipleSignatures && parameterHintsVisible && textInputFocus"
    },
    {
        "key": "down",
        "command": "-workbench.banner.focusNextAction",
        "when": "bannerFocused"
    },
    {
        "key": "down",
        "command": "-workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "down",
        "command": "-emacs-mcx.isearchExit",
        "when": "editorFocus && findWidgetVisible && !config.emacs-mcx.cursorMoveOnFindWidget && !isComposing && !replaceInputFocussed"
    },
    {
        "key": "down",
        "command": "-workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+x ctrl+d",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+x b",
        "command": "-workbench.action.showAllEditorsByMostRecentlyUsed",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+s",
        "command": "actions.find",
        "when": "(editorFocus || editorIsOpen) && !findInputFocussed"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+s",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+s",
        "command": "list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "ctrl+f",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "ctrl+f",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "right",
        "command": "-list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "left",
        "command": "-list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.togglePanel",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+x j",
        "command": "-workbench.action.togglePanel",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "emacs-mcx.cancel",
        "when": "emacs-mcx.inMarkMode"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+u ctrl+f",
        "command": "workbench.files.action.createFolderFromExplorer"
    },
    {
        "key": "ctrl+g",
        "command": "emacs-mcx.cancel"
    },
    {
        "key": "ctrl+g",
        "command": "-emacs-mcx.cancel",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "interactive.input.clear",
        "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && resourceScheme == 'vscode-interactive'"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u f",
        "command": "workbench.files.action.createFolderFromExplorer"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+x d",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "ctrl+g",
        "command": "cancelLinkedEditingInput",
        "when": "LinkedEditingInputVisible && editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+g",
        "command": "commentsClearFilterText",
        "when": "commentsFilterFocus"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+g",
        "command": "editor.cancelOperation",
        "when": "cancellableOperation"
    },
    {
        "key": "ctrl+g",
        "command": "editor.closeCallHierarchy",
        "when": "callHierarchyVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "hideCodeActionWidget",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "interactive.input.clear",
        "when": "!LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !isComposing && !markersNavigationVisible && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible && resourceScheme == 'vscode-interactive'"
    },
    {
        "key": "ctrl+g",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.hideComment",
        "when": "commentEditorFocused"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.banner.focusBanner",
        "when": "bannerFocused"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.statusBar.clearFocus",
        "when": "statusBarFocused"
    },
    {
        "key": "ctrl+g",
        "command": "settings.action.focusLevelUp",
        "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
    },
    {
        "key": "ctrl+g",
        "command": "welcome.goBack",
        "when": "inWelcome && activeEditor == 'gettingStartedPage'"
    },
    {
        "key": "ctrl+u ctrl+r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+u r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+w",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+w",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+y",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+u i",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+u ctrl+i",
        "command": "explorer.newFile"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+]",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+x ctrl+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "shift+f8",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+x 0",
        "command": "-workbench.action.closeEditorsInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+x ctrl+c",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+x c",
        "command": "workbench.action.closeEditorInAllGroups"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+x n",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+x ctrl+o",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "up",
        "command": "-history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-inlineChat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
        "key": "up",
        "command": "-interactive.history.previous",
        "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
    },
    {
        "key": "up",
        "command": "-notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "up",
        "command": "-scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "up",
        "command": "-workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "up",
        "command": "-workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "up",
        "command": "-iconSelectBox.focusUp",
        "when": "iconSelectBoxFocus"
    },
    {
        "key": "up",
        "command": "-editor.action.selectPreviousStickyScrollLine",
        "when": "stickyScrollFocused"
    },
    {
        "key": "up",
        "command": "-emacs-mcx.isearchExit",
        "when": "editorFocus && findWidgetVisible && !config.emacs-mcx.cursorMoveOnFindWidget && !isComposing && !replaceInputFocussed"
    },
    {
        "key": "down",
        "command": "-workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "ctrl+x ctrl+o",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "ctrl+x ctrl+p",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+8",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.triggerSuggest",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+'",
        "command": "-editor.action.triggerSuggest",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+meta+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+v",
        "command": "-filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "meta+v",
        "command": "emacs-mcx.scrollDownCommand",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !suggestWidgetVisible"
    },
    {
        "key": "alt+v",
        "command": "-emacs-mcx.scrollDownCommand",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !suggestWidgetVisible"
    },
    {
        "key": "meta+v",
        "command": "emacs-mcx.scrollDownCommand",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+v",
        "command": "-emacs-mcx.scrollDownCommand",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+o",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key":  "enter",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findWidgetVisible && !replaceInputFocussed"
    },
    {
        "key": "ctrl+a",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+b",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+e",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+f",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+n",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+p",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "ctrl+k",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+w",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+space",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+y",
        "command": "",
        "when": "editorFocus && findWidgetVisible && findInputFocussed",
    },
    {
        "key": "ctrl+space",
        "command": "emacs-mcx.setMarkCommand",
        "when": "editorTextFocus || findInputFocussed"
    },
    {
        "key": "ctrl+space",
        "command": "-emacs-mcx.setMarkCommand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "emacs-mcx.cancel",
        "when": "editorHasSelection && editorTextFocus && !config.emacs-mcx.useMetaPrefixEscape"
    },
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !isComposing"
    },
    {
        "key": "ctrl+y",
        "command": "-emacs-mcx.isearchExit",
        "when": "editorFocus && findWidgetVisible && !isComposing"
    },
    {
        "key": "ctrl+y",
        "command": "emacs-mcx.yank",
        "when": "(editorTextFocus && !editorReadonly) || findInputFocussed"
    },
    {
        "key": "ctrl+y",
        "command": "-emacs-mcx.yank",
        "when": "editorTextFocus && !editorReadonly"
    }
]